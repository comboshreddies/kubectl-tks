reset
termtosvg ../01_tks.svg
reset
banner " " " " "tks :" "oneliner" | lolcat 

# one-liners are designed to be short, but they might not be easily readable. Power
# of one-liners come with prepared scripts and shortcuts, but will start with empty state
# (so no ~/.tks/sequences.json for a start, we will add those later)
# here is simple one liner that executes env for each pod in nginx container
# pods are selected with -l app=nginx 

kubectl tks -n test-run start -l app=nginx  "_ exec {{pod}} -c nginx -- env"  

# start command will try to find a script within ~/.tks/sequences.json
# as there is no script named "_ exec {{pod}} -c nginx -- env", it 
# will assume argument is not a script name but one-liner 
# _ shortcut will run kubectl with same kubectl switches (--context, -n, --kubeconfig)
# as tks was executed, so in this case _ will be replaced with
# "kubectl -n test-run"
# for each pod new tmux window will be created, and script
# kubectl -n test-run exec {{pod}} -c nginx -- env 
# will be executed for each pod, replacing {{pod}} with specific pod name
# new tmux session OneLiner--test-run is created with base window

# check available tmux sessions
tmux ls
# attach to tmux so we can see what has been executed
tmux attach -t OneLiner--test-run
#C tmux send-keys -t 0 "# next screen - ctrl+b + n"

#C ssh gdt tmux next-window -t OneLiner--test-run
#C tmux send-keys -t 0 "# next screen - ctrl+b + n"

#C ssh gdt tmux next-window -t OneLiner--test-run
#C tmux send-keys -t 0 "# next screen - ctrl+b + n"

#C ssh gdt tmux next-window -t OneLiner--test-run
#C tmux send-keys -t 0 "# next screen - ctrl+b + n"

#C ssh gdt tmux next-window -t OneLiner--test-run 
#C tmux send-keys -t 0 "# detach from tmux"

#C ssh gdt "tmux detach-client -s OneLiner--test-run"

# note: tmux is up and running after script execution
# more about handling lingering tmux in next section
#    
exit

