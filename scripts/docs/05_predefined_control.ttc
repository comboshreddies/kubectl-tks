reset
termtosvg ../05_tks.svg
reset
banner " " " " "tks :" "predef" "control" | lolcat

# to be able to operate within tmux windows/panes there are some specific controls
# here is how you can check what controls are available
tks list control
# with OP_COMMENT you can make a comment that will be printed and rendered
kubectl tks -n test-run start -l app=nginx  "_ exec {{pod}} -c nginx -- env ;{{OP_COMMENT}} doing env on pod {{pod}}" -T

# OP_TERMINATE control operation instructs tks to terminate tmux session as last step of execution
# run one-liner
kubectl tks -n test-run start -l app=nginx  "_ exec {{pod}} -c nginx -- env ;{{OP_TERMINATE}}" -T

# check tmux sessions
tmux ls
# no tmux session left running

# OP_ATTACH control operation instructs tks to attach tmux session, so you do not need to run tmux attach manuall
kubectl tks -n test-run start -l app=nginx  "_ exec {{pod}} -c nginx -- env ;{{OP_ATTACH}}" -T

#C ssh gdt "tmux next-window -t OneLiner--test-run"

#C tmux send-keys -t 0 "# next screen"

#C ssh gdt tmux next-window -t OneLiner--test-run

#C ssh gdt tmux next-window -t OneLiner--test-run

#C ssh gdt tmux next-window -t OneLiner--test-run 

#C tmux send-keys -t 0 "# detach from tmux"

#C ssh gdt "tmux detach-client -s OneLiner--test-run"

# tmux should be now detached but live
tmux ls

# there are also short versions, so {{_T}} for terminate and {{_C}} for comment, and {{_A}} for attach
# in one-liners each {{OP_ command must come after ; character, otherwise will not work. 
# all control commands start with beginning of line. 
# For more info you can check scripts within sequence.json .
#    
exit

