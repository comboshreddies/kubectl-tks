{
  "podMap": {
    "p2c": [
      { "busybox": "busybox.*" },
      { "nginx": "nginx.*" },
      { "main": ".*" }
    ],
    "p2cLogs": [
      { "busybox": "logs.*" },
      { "main": ".*" }
    ],
    "p2sh": [
      { "/bin/bash" : "nginx.*" },
      { "/bin/sh": ".*" }
    ]
  },
  "shortcuts": {
    "LOGS_SWITCHES": " --prefix --timestamps --max-log-requests 100 ",
    "K" : "_",
    "EP" : "exec {{pod}}",
    "EC" : "_ exec {{pod}} -c {{p2c}} --",
    "EIC" : "_ exec -it {{pod}} -c {{p2c}} --",
    "ECB" : "_ exec {{pod}} -c {{p2c}} -- /bin/bash -c ",
    "ECBS" : "_ exec {{pod}} -c {{p2c}} -- {{p2sh}}",
    "EICBS" : "_ exec -it {{pod}} -c {{p2c}} -- {{p2sh}}",
    "LC" : "_ logs -f {{LOGS_SWITCHES}} {{pod}} -c {{p2cLog}}",
    "ECB": "{{EC}} /bin/bash -c "
  },
  "scripts": {
    "custom": [
      "{{OP_INFO}} custom shell script, just passing variables",
      "{{OP_COMMENT}} all logic is within a script",
      "custom.sh {{k8s_context}} {{k8s_namespace}} {{k8s_pod}} {{p2c}}"
    ],
    "env-nginx-simple": [
      "{{OP_INFO}} execute env on each pod and put to pod.env file",
      "kubectl -n {{k8s_namespace}} exec {{k8s_pod}} -c nginx  -- env > {{k8s_pod}}.env",
      "cat {{k8s_pod}}.env"
    ],
    "env-nginx-simple-t": [
      "{{OP_INFO}} execute env on each pod and put to pod.env file, terminate tmux",
      "kubectl -n {{k8s_namespace}} exec {{k8s_pod}} -c nginx  -- env > {{k8s_pod}}.env",
      "cat {{k8s_pod}}.env",
      "{{OP_TERMINATE}}"
    ],
    "env": [
      "{{OP_INFO}} execute env on each pod and put to pod.env file",
      "{{EC}} env > {{k8s_pod}}.env"
    ],
    "env-ac": [
      "{{OP_INFO}} execute env on each pod and put to pod.env file, auto close",
      "{{EC}} env > {{k8s_pod}}.env",
      "{{OP_TERMINATE}}"
    ],
    "env-at": [
      "{{OP_INFO}} execute env on each pod and put to pod.env file, auto attach",
      "{{EC}} env > {{k8s_podi}}.env",
      "{{OP_ATTACH}}"
    ],
    "procTcp": [
      "{{OP_INFO}} get /proc/net/tcp on each then convert it to netstat format",
      "{{EC}} /bin/cat /proc/net/tcp  > {{k8s_pod}}.procTcp.raw",
      "cat {{k8s_pod}}.procTcp.raw | ./proc_netstat.sh > {{k8s_pod}}.procTcp.parsed",
      "{{OP_TERMINATE}}"
    ],
    "tcpdump-all": [
      "{{OP_INFO}} tcpdump on any interface all traffic for 10 seconds or 1000 packets",
      "{{ECB}} \"apt -y update && apt -y install tcpdump\"",
      "{{ECB}} \"timeout 10 tcpdump -i any -w /tmp/{{k8s_pod}}.pcap -s65535 -c 1000\"",
      "{{ECB}} \"rm -f /tmp/{{k8s_pod}.pcap.gz && cd /tmp && gzip {{k8s_pod}}.pcap\"",
      "{{K}} cp {{k8s_pod}}:/tmp/{{k8s_pod}}.pcap.gz -c {{p2c}} --retries=4 ./{{k8s_pod}}.pcap.gz",
      "{{OP_TERMINATE}}"
    ],
    "strace-php": [
      "{{OP_INFO}} install strace and start strace on all php processes",
      "{{ECB}} \"apt -y update && apt -y install strace psmisc procps\"",
      "{{ECB}} \"timeout 300 strace -o /tmp/{{k8s_pod}}.strace -s999999 -yy -tt -T $(pgrep php | awk '{ print \" -p \" $1}') \"",
      "{{ECB}} \"rm -f /tmp/{{k8s_pod}}.strace.gz && cd /tmp && gzip {{k8s_pod}}.strace\"",
      "{{K}} cp {{k8s_pod}}:/tmp/{{k8s_pod}}.strace.gz -c {{p2c}} --retries=4 ./{{k8s_pod}}.strace.gz",
      "{{OP_TERMINATE}}"
    ],
    "ping-KubeSvcHost": [
      "{{OP_INFO}} install ping util and ping KUBERNETES_SERVICE_HOST env variable ip",
      "{{ECB}} \"apt -y update && apt -y install iputils-ping\"",
      "{{ECB}} \"ping -c 10 ' + '\\' + '$KUBERNETES_SERVICE_HOST\"",
      "{{OP_TERMINATE}}"
    ],
    "tcpdump-install": [
      "{{OP_INFO}} install tcpdump",
      "{{ECB}} \"apt -y update && apt -y install tcpdump\"",
      "{{DO_TERMINATE}}"
    ],
    "strace-install": [
      "{{OP_INFO}} install strace",
      "{{ECB}} \"apt -y update && apt -y install strace\"",
      "{{DO_TERMINATE}}"
    ],
    "ping-install": [
      "{{OP_INFO}} install ping",
      "{{ECB}} \"apt -y update && apt -y install iputils-ping\"",
      "{{DO_TERMINATE}}"
    ],
    "ps-install": [
      "{{OP_INFO}} install ps and pgrep",
      "{{ECB}} \"apt -y update && apt -y install psmisc procps\"",
      "{{DO_TERMINATE}}"
    ],
    "ps-tcpdump": [
      "{{OP_INFO}} check each pod if there is tcpdump process left running, attaches tmux",
      "{{ECB}} \"ps ax | grep tcpdump\"",
      "{{DO_ATTACH}}"
    ],
    "kctl-exec-it-bash": [
      "{{OP_INFO}} execute bash on each pod in interactive mode and attach to tmux",
      "{{EIC}} /bin/bash",
      "{{OP_NO_PROMPT_WAIT}}",
      "{{DO_ATTACH}}"
    ],
    "exec-it-sh": [
      "{{OP_INFO}} execute sh on each pod in interactive mode and attach to tmux",
      "{{EIC}} /bin/sh",
      "{{OP_NO_PROMPT_WAIT}}",
      "{{DO_ATTACH}}"
    ],
    "logs1": [
      "{{OP_INFO}} execute kubectl logs on each pod/container, pass it to local file then tail all files to console",
      "{{LC1}} > {{k8s_namespace}}_logs_{{k8s_pod}}_{p2c}.log",
      "{{OP_NO_PROMPT_WAIT}}",
      "{{OP_FINALLY}} tail -f -q {{k8s_namespace}}_logs_*"
    ],
    "logs2": [
      "{{OP_INFO}} execute kubectl logs on each pod/container, pass it to local file then tail all files to console",
      "{{LC2}} > {{k8s_namespace}}_logs_{{k8s_pod}}_{p2cLog}.log",
      "{{OP_NO_PROMPT_WAIT}",
      "{{OP_FINALLY}} tail -f -q {{k8s_namespace}}_logs_*"
    ],
    "dry": [
      "{{OP_INFO}} just echo {{k8s_context}} {{k8s_namespace}} {{k8s_pod}} and {{p2c}} values",
      "echo \"ctx {{k8s_context}} ns {{k8s_namespace}} pod {{k8s_pod}} co {{p2c}}\" ",
      "{{DO_ATTACH}}"
    ],
    "local-test": [
      "{{OP_INFO}} test no kubectl",
      "echo {{k8s_context}} {{k8s_namespace}}",
      "{{OP_COMMENT}} test comment",
      "echo {{k8s_context}} {{k8s_namespace}}",
      "echo {{k8s_context}} {{k8s_namespace}}"
    ],
    "local-test2": [
      "{{OP_INFO}} test no kubectl",
      "ABCD=abcd",
      "{{OP_SLEEP}} 3",
      "echo $ABCD",
      "echo {{k8s_context}} {{k8s_namespace}} {{p2cLogs}}",
      "SLEEPTIME=$(($RANDOM % 60))",
      "echo $SLEEPTIME",
      "sleep $SLEEPTIME",
      "{{OP_NO_PROMPT_WAIT}}",
      "echo {{k8s_context}} {{k8s_namespace}} {{p2c}}",
      "export PS1='abcd $ '",
      "{{OP_REFRESH_PROMPT}}",
      "echo {{k8s_context}} {{k8s_namespace}}",
      "{{OP_FINALLY}} echo done > /tmp/x"
    ],
    "remote-exec": [
      "{{OP_INFO}} example of attaching to remote host with different prompt",
      "{{EICBS}}",
      "{{OP_NO_PROMPT_WAIT}}",
      "{{OP_REFRESH_PROMPT}}",
      "date",
      "hostname",
      "exit",
      "{{OP_NO_PROMPT_WAIT}}",
      "{{OP_REFRESH_PROMPT}}",
      "hostname"
    ]
  }
}
